#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// Configura√ß√£o - ALTERE AQUI SUA URL DE PRODU√á√ÉO
const PRODUCTION_API_URL = 'https://seudominio.com/api'; // ALTERE PARA SUA URL REAL

console.log('üîÑ Atualizando URLs da API para produ√ß√£o...');
console.log(`üì° Nova URL: ${PRODUCTION_API_URL}`);

// Arquivos para atualizar
const filesToUpdate = [
  'src/payments/paradise.ts',
  'src/components/PaymentModal.tsx'
];

// Fun√ß√£o para atualizar arquivo
function updateFile(filePath) {
  try {
    if (!fs.existsSync(filePath)) {
      console.log(`‚ö†Ô∏è  Arquivo n√£o encontrado: ${filePath}`);
      return;
    }

    let content = fs.readFileSync(filePath, 'utf8');
    const originalContent = content;

    // Substituir localhost:3333 pela URL de produ√ß√£o
    content = content.replace(/http:\/\/localhost:3333/g, PRODUCTION_API_URL);
    content = content.replace(/localhost:3333/g, PRODUCTION_API_URL.replace('https://', ''));

    if (content !== originalContent) {
      fs.writeFileSync(filePath, content, 'utf8');
      console.log(`‚úÖ Atualizado: ${filePath}`);
    } else {
      console.log(`‚ÑπÔ∏è  Nenhuma altera√ß√£o necess√°ria: ${filePath}`);
    }
  } catch (error) {
    console.error(`‚ùå Erro ao atualizar ${filePath}:`, error.message);
  }
}

// Atualizar todos os arquivos
filesToUpdate.forEach(updateFile);

console.log('üéâ Atualiza√ß√£o conclu√≠da!');
console.log('');
console.log('üìã PR√ìXIMOS PASSOS:');
console.log('1. Execute: npm run build');
console.log('2. Fa√ßa upload da pasta dist/ para public_html/');
console.log('3. Configure o backend na Hostinger');
console.log('4. Teste tudo funcionando!');
